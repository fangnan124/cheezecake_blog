# From http://chrisstump.online/2016/02/20/docker-existing-rails-application/

upstream puma {
  server web:3000;
}

server {
  # define your domain
  # server_name cheezecake.net;
  listen 80;
  server_name localhost;
  # define the public application root
  root   /metro_review/public;
  index  index.html;

  # define where Nginx should write its logs
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # # serve static (compiled) assets directly if they exist (for rails production)
  # location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
  #   try_files $uri @rails;
  #
  #   access_log off;
  #   gzip_static on; # to serve pre-gzipped version
  #
  #   expires max;
  #   add_header Cache-Control public;
  #
  #   # Some browsers still send conditional-GET requests if there's a
  #   # Last-Modified header or an ETag header even if they haven't
  #   # reached the expiry date sent in the Expires header.
  #   add_header Last-Modified "";
  #   add_header ETag "";
  #   break;
  # }

  # send non-static file requests to the app server
  location / {
    try_files $uri @rails;
  }

  location @rails {
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-CSRF-Token $http_x_csrf_token;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    proxy_pass http://puma;
  }

  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/crm.metroengines.jp/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/crm.metroengines.jp/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = crm.metroengines.jp) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80 ;
    listen [::]:80 ;
    server_name crm.metroengines.jp;
    return 404; # managed by Certbot
}
